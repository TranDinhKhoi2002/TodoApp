{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\TodoApp\\\\src\\\\components\\\\Tasks\\\\Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport { motion, AnimatePresence } from \"framer-motion/dist/framer-motion\";\nimport { useState, useContext } from \"react\";\nimport TaskContext from \"../context/TaskContext\";\nimport DropDown from \"../DropDown/DropDown\";\nimport Task from \"../Task/Task\";\nimport \"./Tasks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [tasksType, setTasksType] = useState(\"all\");\n  const {\n    tasks,\n    doneTasks,\n    deleteAllTasks\n  } = useContext(TaskContext);\n\n  const changeDropDownHandler = e => {\n    switch (e.target.dataset.catagory) {\n      case \"all\":\n        setTasksType(\"all\");\n        break;\n\n      case \"done\":\n        setTasksType(\"done\");\n        break;\n\n      default:\n        console.error(\"Tasks type is not valid\");\n    }\n  };\n\n  const getTasksList = type => {\n    if (tasks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"nothing\",\n        children: \"You don't have any task to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (type === \"all\") {\n      return tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        isDone: task.isDone,\n        topic: task.topic,\n        content: task.content\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (type === \"done\") {\n      return doneTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        isDone: task.isDone,\n        topic: task.topic,\n        content: task.content\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__title\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tasks__title__icon\",\n        src: \"./svg/all-task.svg\",\n        alt: \"All Tasks Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tasks__title__text\",\n        children: \"All Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__filter\",\n      children: [/*#__PURE__*/_jsxDEV(DropDown, {\n        onChangeDropDown: changeDropDownHandler,\n        type: tasksType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n        className: \"btn-clear\",\n        whileTap: {\n          scale: 0.9\n        },\n        onClick: deleteAllTasks,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__container\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: getTasksList(tasksType)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tasks, \"dyt/pKovXIfz+mZHWOO3ZZSGIVI=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["D:/Project_ReactJS/TodoApp/src/components/Tasks/Tasks.jsx"],"names":["motion","AnimatePresence","useState","useContext","TaskContext","DropDown","Task","Tasks","tasksType","setTasksType","tasks","doneTasks","deleteAllTasks","changeDropDownHandler","e","target","dataset","catagory","console","error","getTasksList","type","length","map","task","id","isDone","topic","content","scale"],"mappings":"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","sourcesContent":["import { motion, AnimatePresence } from \"framer-motion/dist/framer-motion\";\r\nimport { useState, useContext } from \"react\";\r\nimport TaskContext from \"../context/TaskContext\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\nimport Task from \"../Task/Task\";\r\n\r\nimport \"./Tasks.css\";\r\n\r\nconst Tasks = () => {\r\n  const [tasksType, setTasksType] = useState(\"all\");\r\n  const { tasks, doneTasks, deleteAllTasks } = useContext(TaskContext);\r\n\r\n  const changeDropDownHandler = (e) => {\r\n    switch (e.target.dataset.catagory) {\r\n      case \"all\":\r\n        setTasksType(\"all\");\r\n        break;\r\n      case \"done\":\r\n        setTasksType(\"done\");\r\n        break;\r\n      default:\r\n        console.error(\"Tasks type is not valid\");\r\n    }\r\n  };\r\n\r\n  const getTasksList = (type) => {\r\n    if (tasks.length === 0) {\r\n      return <h4 className=\"nothing\">You don't have any task to do</h4>;\r\n    }\r\n\r\n    if (type === \"all\") {\r\n      return tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          id={task.id}\r\n          isDone={task.isDone}\r\n          topic={task.topic}\r\n          content={task.content}\r\n        />\r\n      ));\r\n    }\r\n\r\n    if (type === \"done\") {\r\n      return doneTasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          id={task.id}\r\n          isDone={task.isDone}\r\n          topic={task.topic}\r\n          content={task.content}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <div className=\"tasks__title\">\r\n        <img\r\n          className=\"tasks__title__icon\"\r\n          src=\"./svg/all-task.svg\"\r\n          alt=\"All Tasks Icon\"\r\n        />\r\n        <h2 className=\"tasks__title__text\">All Tasks</h2>\r\n      </div>\r\n      <div className=\"tasks__filter\">\r\n        <DropDown onChangeDropDown={changeDropDownHandler} type={tasksType} />\r\n        <motion.button\r\n          className=\"btn-clear\"\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={deleteAllTasks}\r\n        >\r\n          Clear All\r\n        </motion.button>\r\n      </div>\r\n      <div className=\"tasks__container\">\r\n        <AnimatePresence>{getTasksList(tasksType)}</AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}