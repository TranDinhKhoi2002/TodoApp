{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\TodoApp\\\\src\\\\components\\\\Task\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { motion } from \"framer-motion/dist/framer-motion\";\nimport { useContext } from \"react\";\nimport TaskContext from \"../context/TaskContext\";\nimport \"./Task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    isDone,\n    topic,\n    content,\n    id\n  } = _ref;\n  const {\n    deleteTask,\n    selectDoneTask,\n    setId\n  } = useContext(TaskContext);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"task\",\n    initial: {\n      x: \"-100%\",\n      margin: 0\n    },\n    animate: {\n      x: 0,\n      marginTop: 25\n    },\n    exit: {\n      x: \"-100%\",\n      marginTop: 0,\n      height: 0,\n      width: 0,\n      padding: 0,\n      opacity: 0,\n      transition: {\n        duration: 0.3\n      }\n    },\n    transition: {\n      type: \"spring\",\n      stiffness: 80,\n      damping: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `task-line done-${isDone}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__actions\",\n      children: [/*#__PURE__*/_jsxDEV(motion.button, {\n        className: \"ball task__delete\",\n        whileTap: {\n          scale: 2\n        },\n        onClick: () => deleteTask(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n        className: \"ball task__edit\",\n        whileTap: {\n          scale: 2\n        },\n        onClick: () => setId(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n        className: \"ball task__done\",\n        whileTap: {\n          scale: 2\n        },\n        onClick: () => selectDoneTask(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"task__title\",\n      children: isDone ? /*#__PURE__*/_jsxDEV(\"del\", {\n        children: topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this) : topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task__content\",\n      children: isDone ? /*#__PURE__*/_jsxDEV(\"del\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 46\n      }, this) : content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"2rmyD/Wi8buyJN4Vq+Tnn7WLmVo=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/Project_ReactJS/TodoApp/src/components/Task/Task.jsx"],"names":["motion","useContext","TaskContext","Task","isDone","topic","content","id","deleteTask","selectDoneTask","setId","x","margin","marginTop","height","width","padding","opacity","transition","duration","type","stiffness","damping","scale"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kCAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAmC;AAC/C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA;AAA9B,MAAwCT,UAAU,CAACC,WAAD,CAAxD;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAE;AAAES,MAAAA,CAAC,EAAE,OAAL;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFX;AAGE,IAAA,OAAO,EAAE;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQE,MAAAA,SAAS,EAAE;AAAnB,KAHX;AAIE,IAAA,IAAI,EAAE;AACJF,MAAAA,CAAC,EAAE,OADC;AAEJE,MAAAA,SAAS,EAAE,CAFP;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,KAAK,EAAE,CAJH;AAKJC,MAAAA,OAAO,EAAE,CALL;AAMJC,MAAAA,OAAO,EAAE,CANL;AAOJC,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE;AADA;AAPR,KAJR;AAeE,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,SAAS,EAAE,EAFD;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAfd;AAAA,4BAqBE;AAAM,MAAA,SAAS,EAAG,kBAAiBlB,MAAO;AAA1C;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,MAAD,CAAQ,MAAR;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,QAAQ,EAAE;AAAEmB,UAAAA,KAAK,EAAE;AAAT,SAFZ;AAGE,QAAA,OAAO,EAAE,MAAMf,UAAU,CAACD,EAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD,CAAQ,MAAR;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,QAAQ,EAAE;AAAEgB,UAAAA,KAAK,EAAE;AAAT,SAFZ;AAGE,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACH,EAAD;AAHtB;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,MAAD,CAAQ,MAAR;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,QAAQ,EAAE;AAAEgB,UAAAA,KAAK,EAAE;AAAT,SAFZ;AAGE,QAAA,OAAO,EAAE,MAAMd,cAAc,CAACF,EAAD;AAH/B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuCE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BH,MAAM,gBAAG;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cAAH,GAAwBA;AAA3D;AAAA;AAAA;AAAA;AAAA,YAvCF,eAwCE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BD,MAAM,gBAAG;AAAA,kBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,cAAH,GAA0BA;AAA9D;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA/CD;;GAAMH,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import { motion } from \"framer-motion/dist/framer-motion\";\r\nimport { useContext } from \"react\";\r\nimport TaskContext from \"../context/TaskContext\";\r\n\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ isDone, topic, content, id }) => {\r\n  const { deleteTask, selectDoneTask, setId } = useContext(TaskContext);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"task\"\r\n      initial={{ x: \"-100%\", margin: 0 }}\r\n      animate={{ x: 0, marginTop: 25 }}\r\n      exit={{\r\n        x: \"-100%\",\r\n        marginTop: 0,\r\n        height: 0,\r\n        width: 0,\r\n        padding: 0,\r\n        opacity: 0,\r\n        transition: {\r\n          duration: 0.3,\r\n        },\r\n      }}\r\n      transition={{\r\n        type: \"spring\",\r\n        stiffness: 80,\r\n        damping: 10,\r\n      }}\r\n    >\r\n      <span className={`task-line done-${isDone}`}></span>\r\n      <div className=\"task__actions\">\r\n        <motion.button\r\n          className=\"ball task__delete\"\r\n          whileTap={{ scale: 2 }}\r\n          onClick={() => deleteTask(id)}\r\n        />\r\n        <motion.button\r\n          className=\"ball task__edit\"\r\n          whileTap={{ scale: 2 }}\r\n          onClick={() => setId(id)}\r\n        />\r\n        <motion.button\r\n          className=\"ball task__done\"\r\n          whileTap={{ scale: 2 }}\r\n          onClick={() => selectDoneTask(id)}\r\n        />\r\n      </div>\r\n      <h4 className=\"task__title\">{isDone ? <del>{topic}</del> : topic}</h4>\r\n      <p className=\"task__content\">{isDone ? <del>{content}</del> : content}</p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}