{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\TodoApp\\\\src\\\\components\\\\PopUp\\\\PopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport { toast } from \"react-toastify\";\nimport { useContext, useState } from \"react\";\nimport TaskContext from \"../context/TaskContext\";\nimport \"./PopUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopUp = () => {\n  _s();\n\n  const [text, setText] = useState({\n    topic: \"\",\n    content: \"\"\n  });\n  const {\n    PopUp,\n    setPopUp,\n    editTask\n  } = useContext(TaskContext);\n\n  const submitHandler = (e, isOk) => {\n    e.preventDefault();\n\n    if (isOk) {\n      toast.success(\"Task was successfully edited!\");\n      editTask(text);\n    }\n\n    setPopUp({\n      in: false,\n      item: null\n    });\n    setText({\n      topic: \"\",\n      content: \"\"\n    });\n  };\n\n  const topicChangeHandler = e => {\n    setText({ ...text,\n      topic: e.target.value\n    });\n  };\n\n  const contentChangeHandler = e => {\n    setText({ ...text,\n      content: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: PopUp.in ? \"pop-up pop-up-show\" : \"pop-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pop-up__title\",\n      children: \"Edit your task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitHandler(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"pop-up__input\",\n        maxLength: 50,\n        placeholder: PopUp.item !== null ? `You are editting ${PopUp.item.topic}` : \"Nothing\",\n        value: text.topic,\n        onChange: topicChangeHandler,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"pop-up__content\",\n        maxLength: 100,\n        placeholder: \"Edit content\",\n        value: text.content,\n        onChange: contentChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pop-up__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pop-up__button cancel\",\n          type: \"submit\",\n          onClick: e => submitHandler(e, false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pop-up__button confirm\",\n          type: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopUp, \"XHADuKCS80QCmZnKZzRMv7i1QUc=\");\n\n_c = PopUp;\nexport default PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["D:/Project_ReactJS/TodoApp/src/components/PopUp/PopUp.jsx"],"names":["toast","useContext","useState","TaskContext","PopUp","text","setText","topic","content","setPopUp","editTask","submitHandler","e","isOk","preventDefault","success","in","item","topicChangeHandler","target","value","contentChangeHandler"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { useContext, useState } from \"react\";\r\nimport TaskContext from \"../context/TaskContext\";\r\n\r\nimport \"./PopUp.css\";\r\n\r\nconst PopUp = () => {\r\n  const [text, setText] = useState({ topic: \"\", content: \"\" });\r\n  const { PopUp, setPopUp, editTask } = useContext(TaskContext);\r\n\r\n  const submitHandler = (e, isOk) => {\r\n    e.preventDefault();\r\n\r\n    if (isOk) {\r\n      toast.success(\"Task was successfully edited!\");\r\n      editTask(text);\r\n    }\r\n\r\n    setPopUp({ in: false, item: null });\r\n    setText({ topic: \"\", content: \"\" });\r\n  };\r\n\r\n  const topicChangeHandler = (e) => {\r\n    setText({ ...text, topic: e.target.value });\r\n  };\r\n\r\n  const contentChangeHandler = (e) => {\r\n    setText({ ...text, content: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className={PopUp.in ? \"pop-up pop-up-show\" : \"pop-up\"}>\r\n      <h4 className=\"pop-up__title\">Edit your task</h4>\r\n      <form onSubmit={(e) => submitHandler(e, true)}>\r\n        <input\r\n          className=\"pop-up__input\"\r\n          maxLength={50}\r\n          placeholder={\r\n            PopUp.item !== null\r\n              ? `You are editting ${PopUp.item.topic}`\r\n              : \"Nothing\"\r\n          }\r\n          value={text.topic}\r\n          onChange={topicChangeHandler}\r\n          type=\"text\"\r\n        />\r\n        <textarea\r\n          className=\"pop-up__content\"\r\n          maxLength={100}\r\n          placeholder=\"Edit content\"\r\n          value={text.content}\r\n          onChange={contentChangeHandler}\r\n        />\r\n        <div className=\"pop-up__buttons\">\r\n          <button\r\n            className=\"pop-up__button cancel\"\r\n            type=\"submit\"\r\n            onClick={(e) => submitHandler(e, false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button className=\"pop-up__button confirm\" type=\"submit\">\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n"]},"metadata":{},"sourceType":"module"}